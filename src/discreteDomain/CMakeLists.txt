cmake_minimum_required(VERSION 3.1)
project(test)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
message("CMAKE_MODULE_PATH" ${CMAKE_MODULE_PATH})
set(CMAKE_BUILD_TYPE Release)
set(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
set(GLFW_INSTALL OFF CACHE BOOL "" FORCE)


add_subdirectory("${ENGINE_DIR}/glfw" glfw)
add_subdirectory("${ENGINE_DIR}/glad" glad)

set(OpenCASCADE_DIR ${ENGINE_DIR}/OCC)
set(CMAKE_PREFIX_PATH ${ENGINE_DIR}/occ/cmake)
find_package (OpenCASCADE REQUIRED)
if (NOT OpenCASCADE_FOUND)
  message (FATAL_ERROR "coult not find OpenCASCADE, please set OpenCASCADE_DIR variable" )
else()
  message (STATUS "Using OpenCASCADE from \"${OpenCASCADE_INSTALL_PREFIX}\"" )
  message (STATUS "OpenCASCADE_INCLUDE_DIR=${OpenCASCADE_INCLUDE_DIR}")
  message (STATUS "OpenCASCADE_LIBRARY_DIR=${OpenCASCADE_LIBRARY_DIR}")
  INCLUDE_DIRECTORIES(${OpenCASCADE_INCLUDE_DIR})
endif()
add_subdirectory(${ENGINE_DIR}/netgen NETGENLIB)

file(GLOB SRC *.cpp)
file(GLOB INCLUDES *.h)
add_executable(${PROJECT_NAME}  ${SRC} ${INCLUDES} )
target_include_directories(${PROJECT_NAME} PUBLIC ${ENGINE_DIR} ${EIGEN_DIR}  ${ENGINE_DIR}/netgen/include)
target_link_libraries(${PROJECT_NAME}  ${OPENGL_LIBRARIES})
